.container
  #gather.jumbotron.textcenter
    .small
      Topic or statement:
      = link_to @statement.content, statement_path(@statement)
    - unless current_user
      = link_to "Log in", login_path(back_url: request.url)
      first to be able to edit it afterwards - optional
    = form_tag("/ag", :method => "post") do
      .supporter_fields
        Opinion:
        %p= text_area_tag(:comment, @opinion, class: "form-control", placeholder: "Quote or reason why the person you are adding agrees/disagrees (optional)", maxlength: 1000)
        #source_box
          Source:
          %p= text_field_tag(:source, @source, class: "form-control", placeholder: "URL/source where the opinion comes from (mandatory)")
        Name:
        %p= text_field_tag(:name,@individual.name, class: "form-control", placeholder: "Name or @twitter. E.g. @barackobama")

        Wikipedia url:
        %p= text_field_tag(:wikipedia,@individual.wikipedia, class: "form-control", placeholder: "Wikipedia page of her/him")

        Twitter username:
        %p= text_field_tag(:twitter,@individual.twitter, class: "form-control", placeholder: "E.g. @barackobama")

        %p= hidden_field_tag :agg, 'someone_else'

        = hidden_field_tag(:statement_id, @statement.id)
        - if board? && has_admin_category_rights?
          %p
            Category:
            = select_tag :reason_category_id, options_from_collection_for_select(ReasonCategory.all, "id", "name"), include_blank: true
            = link_to "Edit categories", reason_categories_path
        Bio:
        %p= text_field_tag(:biography, @individual.bio, class: "form-control", placeholder: "Short biography", maxlength: 100)
        - if board? && has_profession_rights?
          %p
            Profession:
            = select_tag :profession_id, options_from_collection_for_select(Profession.all, "id", "name"), include_blank: true
            = link_to "Edit professions", professions_path
        Picture url:
        %p= text_field_tag(:picture_from_url, @individual.picture? ? @individual.picture.url : "", class: "form-control", placeholder: "Photo url (taken from Twitter if used)", maxlength: 254)
        - unless current_user.try(:email)
          Your email:
          %p= text_field_tag(:email, "", class: "form-control", placeholder: "whatever@whatever.com")
      %p
        = submit_tag("She/he agrees", class: "btn btn-primary")
        = submit_tag("She/he disagrees", class: "btn btn-primary")
        %span.medium
          or
          = link_to "back", statement_path(@statement)
